Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Code is not reloaded between requests.
  config.cache_classes = true

  # Eager load code on boot. This eager loads most of Rails and
  # your application in memory, allowing both threaded web servers
  # and those relying on copy on write to perform better.
  # Rake tasks automatically ignore this option for performance.
  config.eager_load = true

  # Full error reports are disabled and caching is turned on.
  config.consider_all_requests_local       = false
  config.action_controller.perform_caching = true

  # Enable Rack::Cache to put a simple HTTP cache in front of your application
  # Add `rack-cache` to your Gemfile before enabling this.
  # For large-scale production use, consider using a caching reverse proxy like
  # NGINX, varnish or squid.
  # config.action_dispatch.rack_cache = true

  # Disable serving static files from the `/public` folder by default since
  # Apache or NGINX already handles this.
  config.serve_static_files = ENV['RAILS_SERVE_STATIC_FILES'].present?


  # Specifies the header that your server uses for sending files.
  # config.action_dispatch.x_sendfile_header = 'X-Sendfile' # for Apache
  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for NGINX

  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
  # config.force_ssl = true

  # Use the lowest log level to ensure availability of diagnostic information
  # when problems arise.
  config.log_level = :error
  config.active_record.logger = nil

  # Prepend all log lines with the following tags.
  # config.log_tags = [ :subdomain, :uuid ]

  # Use a different logger for distributed setups.
  # config.logger = ActiveSupport::TaggedLogging.new(SyslogLogger.new)

  # Use a different cache store in production.
  # config.cache_store = :mem_cache_store

  # Enable serving of images, stylesheets, and JavaScripts from an asset server.
  # config.action_controller.asset_host = 'http://assets.example.com'

  # Ignore bad email addresses and do not raise email delivery errors.
  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
  # config.action_mailer.raise_delivery_errors = false

  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
  # the I18n.default_locale when a translation cannot be found).
  config.i18n.fallbacks = true

  # Send deprecation notices to registered listeners.
  config.active_support.deprecation = :notify

  # Use default logging formatter so that PID and timestamp are not suppressed.
  config.log_formatter = ::Logger::Formatter.new

  # Do not dump schema after migrations.
  config.active_record.dump_schema_after_migration = false

  <% if @hurricane_api_settings[:cache].present? %>
    <% case @hurricane_api_settings[:cache][:adapter] %>
      <% when 'redis' %>
  config.cache_store = :redis_store, "<%= @hurricane_api_settings[:cache][:url] %>", {
      expires_in: <%= @hurricane_api_settings[:cache][:options][:expires_in] %>
  }
      <% when 'memory' %>
  config.cache_store = :memory_store, {
      namespace: "<%= @hurricane_api_settings[:cache][:options][:namespace] %>",
      expires_in: <%= @hurricane_api_settings[:cache][:options][:expires_in] %>
  }
    <% end %>
  <% end %>

  # Action Mailer Configuration
  <% if @hurricane_api_settings[:mailer][:disable_logger] %>
  config.action_mailer.logger = nil
  <% end %>
  config.action_mailer.default_options = { from: "Fit2You Broker <<%= @hurricane_api_settings[:mailer][:from] %>>" }
  config.action_mailer.delivery_method = :smtp
  config.action_mailer.smtp_settings = {
    address: "<%= @hurricane_api_settings[:mailer][:configuration][:address] %>",
    port: "<%= @hurricane_api_settings[:mailer][:configuration][:port] %>",
    domain: "<%= @hurricane_api_settings[:mailer][:configuration][:domain] %>",
    user_name: "<%= @hurricane_api_settings[:mailer][:configuration][:user_name] %>",
    password: "<%= @hurricane_api_settings[:mailer][:configuration][:password] %>",
    authentication: "<%= @hurricane_api_settings[:mailer][:configuration][:authentication] %>"
  }
  config.action_mailer.raise_delivery_errors = true

  config.pdf_tmp_folder = File.join(Rails.root, 'tmp')

  # Hurrican Print API
  config.hurricane_print_api = {host: '<%= @hurricane_api_settings[:hurricane_print_api][:host] %>', port: <%= @hurricane_api_settings[:hurricane_print_api][:port] %>, user: '<%= @hurricane_api_settings[:hurricane_print_api][:user] %>', password: '<%= @hurricane_api_settings[:hurricane_print_api][:password] %>'}

  # Grace Landing Page
  config.grace_complete_documentation_page_url = '<%= @hurricane_api_settings[:grace_complete_documentation_page_url] %>'
  config.grace_renewal_activation_url_page_url = '<%= @hurricane_api_settings[:grace_renewal_activation_url_page_url] %>'
  config.grace_activation_page_url = '<%= @hurricane_api_settings[:grace_activation_page_url] %>'

  # Hurricane Payment Api
  config.hurricane_payment_api = { base_uri: '<%= @hurricane_api_settings[:hurricane_payment_api][:base_uri] %>', user: '<%= @hurricane_api_settings[:hurricane_payment_api][:user] %>', password: '<%= @hurricane_api_settings[:hurricane_payment_api][:password] %>' }

  # ActiveJob Configuration
  <% case @hurricane_api_settings[:active_job][:adapter] %>
    <% when 'inline' %>
  config.active_job.queue_adapter = :inline
    <% when 'resque' %>
  config.active_job.queue_adapter = :resque
  <% end %>

  #Iubenda fallback
  config.iubenda_enabled = <%= @hurricane_api_settings[:iubenda_enabled] %>
end
