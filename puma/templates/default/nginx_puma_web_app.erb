upstream puma_<%= @application[:domains].first %> {
 server unix:<%= @application[:deploy_to]%>/shared/sockets/puma.sock fail_timeout=0;
}

server {
  listen 80;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;

  <% if node[:nginx] && node[:nginx][:force_https] %>
  return 301 https://<%= @application[:domains].first %>$request_uri;
  <% end %>

  <% if @application[:log_format] %>
    <% @application[:log_format].each do |log_format_name| %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.<%= log_format_name %>.log <%= log_format_name %>;
    <% end %>
  <% else %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.log;
  <% end %>

  keepalive_timeout 5;

  root <%= @application[:absolute_document_root] %>;

  <% if node[:nginx] && node[:nginx][:client_max_body_size] %>
    client_max_body_size <%= node[:nginx][:client_max_body_size] %>;
  <% end %>

  location / {
    try_files $uri/index.html $uri/index.htm @puma;
  }

  location ~ \.(svg|ttf|ttc|otf|eot|woff|woff2)$ {
      if ($http_origin ~* (https?://[^/]*\.virtualshelf\.net(:[0-9]+)?|https?://[^/]*\.estantevitual\.com\.br(:[0-9]+)?)) {
        add_header 'Access-Control-Allow-Origin' "$http_origin";
    }
  }

  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    if (!-f $request_filename) {
      proxy_pass http://puma_<%= @application[:domains].first %>;
      break;
    }
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }
}

<% if @application[:ssl_support] %>
server {
  listen   443;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>-ssl.access.log;

  ssl on;
  ssl_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @application[:domains].first %>.key;
  <% if @application[:ssl_certificate_ca] -%>
  ssl_client_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.ca;
  <% end -%>

  keepalive_timeout 5;

  root <%= @application[:absolute_document_root] %>;

  <% if node[:nginx] && node[:nginx][:client_max_body_size] %>
    client_max_body_size <%= node[:nginx][:client_max_body_size] %>;
  <% end %>

  location / {
    try_files $uri/index.html $uri/index.htm @puma;
  }

  location @puma {
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    if (!-f $request_filename) {
      proxy_pass http://puma_<%= @application[:domains].first %>;
      break;
    }
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }
}
<% end %>
