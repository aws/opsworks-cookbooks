###################
# Generated by Chef
###################

#
# New Relic Server Monitor configuration file.
#
# Lines that begin with a # are comment lines and are ignored by the server
# monitor. For those options that have command line equivalents, if the
# option is specified on the command line it will over-ride any value set
# in this file.
#

#
# Option : license_key
# Value  : 40-character hexadecimal string provided by New Relic. This is
#          required in order for the server monitor to start.
# Default: none
#
license_key=<%= @resource.license %>

#
# Option : loglevel
# Value  : Level of detail you want in the log file (as defined by the logfile
#          setting below. Valid values are (in increasing levels of verbosity):
#          error        - show errors only
#          warning      - show errors and warnings
#          info         - show minimal additional information messages
#          verbose      - show more detailed information messages
#          debug        - show debug messages
#          verbosedebug - show very detailed debug messages
# Default: error
# Note   : Can also be set with the -d command line option.
#
<% if @resource.loglevel.nil? %>
loglevel=info
<% else %>
loglevel=<%= @resource.loglevel %>
<% end %>

#
# Option : logfile
# Value  : Name of the file where the server monitor will store it's log
#          messages. The amount of detail stored in this file is controlled
#          by the loglevel option (above).
# Default: none. However it is highly recommended you set a value for this.
# Note   : Can also be set with the -l command line option.
#
<% if @resource.logfile.nil? %>
logfile=/var/log/newrelic/nrsysmond.log
<% else %>
logfile=<%= @resource.logfile %>
<% end %>

#
# Option : proxy
# Value  : The name and optional login credentials of the proxy server to use
#          for all communication with the New Relic collector. In its simplest
#          form this setting is just a hostname[:port] setting. The default
#          port if none is specified is 1080. If your proxy requires a user
#          name, use the syntax user@host[:port]. If it also requires a
#          password use the format user:password@host[:port]. For example:
#            fred:secret@proxy.mydomain.com:8181
# Default: none (use a direct connection)
#
<% if @resource.proxy.nil? %>
#proxy=
<% else %>
proxy=<%= @resource.proxy %>
<% end %>

#
# Option : ssl
# Value  : Whether or not to use the Secure Sockets Layer (SSL) for all
#          communication with the New Relic collector. Possible values are
#          true/on or false/off. In certain rare cases you may need to modify
#          the SSL certificates settings below.
# Default: false
#
<% if @resource.ssl.nil? %>
#ssl=false
<% else %>
ssl=<%= @resource.ssl %>
<% end %>

#
# Option : ssl_ca_bundle
# Value  : The name of a PEM-encoded Certificate Authority (CA) bundle to use
#          for SSL connections. This very rarely needs to be set. The monitor
#          will attempt to find the bundle in the most common locations. If
#          you need to use SSL and the monitor is unable to locate a CA bundle
#          then either set this value or the ssl_ca_path option below.
# Default: /etc/ssl/certs/ca-certificates.crt or
#          /etc/pki/tls/certs/ca-bundle.crt
# Note   : Can also be set with the -b command line option.
#
<% if @resource.ssl_ca_bundle.nil? %>
#ssl_ca_bundle=/path/to/your/bundle.crt
<% else %>
ssl_ca_bundle=<%= @resource.ssl_ca_bundle %>
<% end %>

#
# Option : ssl_ca_path
# Value  : If your SSL installation does not use CA bundles, but rather has a
#          directory with PEM-encoded Certificate Authority files, set this
#          option to the name of the directory that contains all the CA files.
# Default: /etc/ssl/certs
# Note   : Can also be set with the -S command line option.
#
<% if @resource.ssl_ca_path.nil? %>
#ssl_ca_path=/etc/ssl/certs
<% else %>
ssl_ca_path=<%= @resource.ssl_ca_path %>
<% end %>

#
# Option : hostname
# Value  : A meaningful host name to be displayed in the user interface. On
#          many cloud based nodes the host name is incomprehensible and makes
#          finding a specific host problematic. Using this option will allow
#          you to assign a more meaningful name to a host. You must ensure
#          that all your host names are unique.
# Default: Whatever the system calls the host.
# Note   : Can also be set with the -n command line option.
#
<% if @resource.hostname.nil? %>
#hostname=
<% else %>
hostname=<%= @resource.hostname %>
<% end %>

#
# Option : labels
#
# Value  : A dictionary of label names and values for categories that will be
#          applied to the data sent from this agent. May also be expressed as
#          a semicolon delimited string of colon-separated pairs;
#          for example, labels=Server:One;Data Center:Primary;.
# Default: nil
<% if @resource.labels.nil? %>
#labels=
<% else %>
labels=<%= @resource.labels %>
<% end %>

#
# Option : pidfile
# Value  : Name of a file where the server monitoring daemon will store it's
#          process ID (PID). This is used by the startup and shutdown script
#          to determine if the monitor is already running, and to start it up
#          or shut it down.
# Default: /tmp/nrsysmond.pid
# Note   : Can also be set with the -p command line option.
#
<% if @resource.pidfile.nil? %>
#pidfile=/var/run/newrelic/nrsysmond.pid
<% else %>
pidfile=<%= @resource.pidfile %>
<% end %>

#
# Option : collector_host
# Value  : The name of the New Relic collector to connect to. This should only
#          ever be changed on advise from a New Relic support staff member.
#          The format is host[:port]. Using a port number of 0 means the default
#          port, which is 80 (if not using the ssl option - see below) or 443
#          if SSL is enabled. If the port is omitted the default value is used.
# Default: collector.newrelic.com
#
<% if @resource.collector_host.nil? %>
#collector_host=collector.newrelic.com
<% else %>
collector_host=<%= @resource.collector_host %>
<% end %>

#
# Option : timeout
# Value  : How long the monitor should wait to contact the collector host. If
#          the connection cannot be established in this period of time, the
#          monitor will progressively back off in 15-second increments, up to
#          a maximum of 300 seconds. Once the initial connection has been
#          established, this value is reset back to the value specified here
#          (or the default). This then sets the maximum time to wait for
#          a connection to the collector to report data. There is no back-off
#          once the original connection has been made. The value is in seconds.
# Default: 30
#
<% if @resource.timeout.nil? %>
#timeout=30
<% else %>
timeout=<%= @resource.timeout %>
<% end %>
