<dataConfig>

  <dataSource type="JdbcDataSource" driver="org.postgresql.Driver"
    name="library"
    url="jdbc:postgresql://<%= @db_url %>:5432/<%= @db_name %>"
    user="<%= @db_user %>"
    password="<%= @db_password %>"
    autoReconnect="true"
  />

  <document>

    <entity name="sku" pk="id" dataSource="library"
     query="SELECT 
              md5(concat(b.id, '|', p.id, '|', s.id)) as id, is_moderated,
              b.id book_id, b.title, b.synopsis,  md5(synopsis) md5_synopsis, b.volume, b.grouped_by,
              p.id as publication_id, p.isbn, p.issn, p.barcode, p.edition, p.weight,
              p.height, p.width, p.depth, p.year, p.pages, pbrs.name publisher, pbrs.id publisher_id,
              p.created_at,
              p.updated_at, p.deleted_at, p.cover, p.isbn, p.issn, p.barcode, 
              s.id as sku, s.seller_id as seller_id, s.price,
              (CASE WHEN s.is_new is not null and s.is_new = 't' THEN 1 ELSE 0 END) new, 
              (CASE WHEN s.is_new is not null and s.is_new = 'f' THEN 1 ELSE 0 END) used,
              s.quantity, s.created_at sku_created_at
            FROM books b
            left join publications p on p.book_id = b.id
            left join skus s on s.publication_id = p.id
            left join publishers pbrs on pbrs.id = p.publisher_id"
     deltaImportQuery="SELECT md5(concat(b.id, '|', p.id, '|', s.id)) as id, is_moderated,
              b.id book_id, b.title, b.synopsis,  md5(synopsis) md5_synopsis, b.volume, b.grouped_by,
              p.id as publication_id, p.isbn, p.issn, p.barcode, p.edition, p.weight, p.height,
              p.height, p.width, p.depth, p.year, p.pages, pbrs.name publisher, pbrs.id publisher_id,
              p.created_at,
              p.deleted_at, p.cover, p.isbn, p.issn, p.barcode, 
              s.id as sku, s.seller_id as seller_id, s.price,
              (CASE WHEN s.is_new is not null and s.is_new = 't' THEN 1 ELSE 0 END) new, 
              (CASE WHEN s.is_new is not null and s.is_new = 'f' THEN 1 ELSE 0 END) used,
               s.quantity, s.created_at sku_created_at
            FROM books b
            left join publications p on p.book_id = b.id
            left join skus s on s.publication_id = p.id
            left join publishers pbrs on pbrs.id = p.publisher_id
            WHERE b.id='${dih.delta.id}'"
     deltaQuery="SELECT b.id as id
            FROM books b
            left join publications p on p.book_id = b.id
            left join skus s on s.publication_id = p.id
            left join publishers pbrs on pbrs.id = p.publisher_id
            WHERE s.updated_at &gt; '${dih.last_index_time}' or p.updated_at &gt; '${dih.last_index_time}' or b.updated_at &gt; '${dih.last_index_time}'"
      >

        <entity name="author" pk="book_id" dataSource="library" processor="SqlEntityProcessor" cacheImpl="SortedMapBackedCache"
          query="select full_name as author_name from authors a
                                                join authors_books ab on a.id = ab.author_id"
          where="book_id=sku.book_id"
          deltaQuery="select ab.book_id from authors a
          join authors_books ab on a.id = ab.author_id where a.updated_at &gt; '${dih.last_index_time}'"
          parentDeltaQuery="select '${author.book_id}' as id"
        >
          <field name="authors" column="author_name"/>
        </entity>
    </entity>


  </document>
</dataConfig>
